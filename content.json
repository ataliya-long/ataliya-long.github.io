{"meta":{"title":"小塔的个人博客","subtitle":"","description":"","author":"Ataliya","url":"http://example.com","root":"/"},"pages":[{"title":"暂无","date":"2024-01-11T11:53:26.000Z","updated":"2024-01-11T12:42:37.938Z","comments":true,"path":"404/index.html","permalink":"http://example.com/404/index.html","excerpt":"","text":""},{"title":"关于作者","date":"2024-01-11T12:43:54.000Z","updated":"2024-01-11T12:55:29.168Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"我，Ataliya，自言自语六级，心里话八级，花式单身大赛赛区冠军，互联网冲浪资深选手，赖床锦标赛冠军得主，亚洲酸柠檬推广大使，熬夜杯曾十五次夺冠，这么厉害的我，不打算喜欢一下吗？"},{"title":"search","date":"2024-01-11T11:53:13.000Z","updated":"2024-01-11T11:53:13.158Z","comments":true,"path":"search/index.html","permalink":"http://example.com/search/index.html","excerpt":"","text":""}],"posts":[{"title":"安装docker compose","slug":"安装docker-compose","date":"2024-01-12T07:17:44.000Z","updated":"2024-01-12T07:18:12.793Z","comments":true,"path":"2024/01/12/安装docker-compose/","permalink":"http://example.com/2024/01/12/%E5%AE%89%E8%A3%85docker-compose/","excerpt":"","text":"安装docker compose 首先，请确保您已经安装了 Docker。如果没有，请访问 Docker 官网 获取适用于您操作系统的安装指南。 按照您的操作系统的指南安装 docker-compose： 对于 Linux： 请运行以下命令安装 docker-compose： 1sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose 更改 docker-compose 的权限以使其可执行： 1sudo chmod +x /usr/local/bin/docker-compose 确认安装成功： 1docker-compose --version 对于 macOS： 如果您已经安装了 Homebrew，可以通过以下命令安装 docker-compose： 1brew install docker-compose 或者，您可以下载 Docker Desktop for Mac，其中包含 docker-compose。 对于 Windows： 对于 Windows 用户，建议安装 Docker Desktop for Windows。安装完成后，docker-compose 将自动包含在其中。 安装完成后，尝试再次运行 docker-compose。如果仍然出现命令未找到的错误，请检查可执行文件是否在您的系统 PATH 中。如果需要，您可以手动将其添加到 PATH。","categories":[],"tags":[]},{"title":"安装docker machine","slug":"安装docker-machine","date":"2024-01-12T07:16:29.000Z","updated":"2024-01-12T07:16:45.755Z","comments":true,"path":"2024/01/12/安装docker-machine/","permalink":"http://example.com/2024/01/12/%E5%AE%89%E8%A3%85docker-machine/","excerpt":"","text":"安装Docker Machine Docker Machine 是一个工具，用于在各种平台上安装和管理 Docker。以下是在不同操作系统上安装 Docker Machine 的方法： 对于 macOS 和 Windows： 对于 macOS 和 Windows 用户，建议安装 Docker Desktop，它包含 Docker Machine。访问 Docker 官网，根据您的操作系统选择合适的版本进行下载和安装。 对于 Linux： 下载最新版本的 Docker Machine 二进制文件： 123base=https://github.com/docker/machine/releases/download/v0.16.2 &amp;&amp;curl -L $base/docker-machine-$(uname -s)-$(uname -m) &gt;/tmp/docker-machine &amp;&amp;sudo install /tmp/docker-machine /usr/local/bin/docker-machine 上述命令将下载 v0.16.2 版本的 Docker Machine。您可以访问 Docker Machine 发布页面 查看最新版本并相应地更新上述命令。 添加可执行权限： 1sudo chmod +x /usr/local/bin/docker-machine 验证安装： 1docker-machine version 如果安装成功，您将看到 Docker Machine 的版本信息。 安装 Bash Completion（可选）： 为了获得更好的命令行体验，您可以安装 Docker Machine 的 Bash Completion。以下是在不同操作系统上安装的方法： 对于 macOS，您可以使用 Homebrew 安装： 12brew install bash-completion 对于 Linux（Debian&#x2F;Ubuntu）： 1sudo apt-get install bash-completion 对于其他 Linux 发行版，请查阅相应文档以获取正确的安装命令。 然后，将以下内容添加到您的 ~/.bashrc、~/.bash_profile 或 ~/.profile 文件中： 123if [ -f $(brew --prefix)/etc/bash_completion ]; then . $(brew --prefix)/etc/bash_completionfi 重新启动终端以使更改生效。 现在，您应该已经成功安装了 Docker Machine。您可以通过运行 docker-machine 命令查看可用选项和子命令。要了解如何使用 Docker Machine，请参阅 Docker Machine 官方文档。","categories":[],"tags":[]},{"title":"安装卸载mysql","slug":"安装卸载mysql","date":"2024-01-12T07:14:19.000Z","updated":"2024-01-12T07:15:04.307Z","comments":true,"path":"2024/01/12/安装卸载mysql/","permalink":"http://example.com/2024/01/12/%E5%AE%89%E8%A3%85%E5%8D%B8%E8%BD%BDmysql/","excerpt":"","text":"一，Linux的YUM在线的MySQL5.7安装😘 工欲善其事必先利其器，要学习Mysql的知识，首先先必须安装Mysql，本教程提供两种Mysql的安装方法 问题描述一般通过yum的在线安装，但是如果更换源以后会出现mysql-server按装包找不到的情况，这时候可以考虑用rpm包来安装，最后再执行yum install mysql-server rpm包的安装方式：mysql_免费高速下载|百度网盘-分享无限制 (baidu.com) ,具体如何放文件，自己决定，可以通过SFTP来传输。 φ(*￣0￣)安装数据库 1.传输完成后： yum -y install 你下的包.rpm 这样做的原因是阿里官网的yum库没有此软件包，所以你必须自己安装依赖。 2.如果执行成功后： yum -y install mysql-server 3.启动mysql服务： systemctl start mysqld 或者 service mysqld start 4.设置mysql服务自启动 systemctl enable mysqld 5.查看数据库密码 cat /var/log/mysqld.log | grep password , 或着你不想查看也可以，可以在 &#x2F;etc&#x2F;my.cnf 中编辑 ，加入一句话叫 skip-grant-tables 这句话的意思是说，可以不用输入密码进入mysql服务器中。 mysql -uroot -p q(≧▽≦q)当进入数据库中 首先先执行一编 flush privileges; 然后再进入修改密码：set password for 'root'@'localhost'=password('你的密码');，如果提示密码不符合规定的话。（ps 如果是新版的mysql的话直接输入set password=\"xxxx\"就行 就执行 set global validate_password_policy=0; #将密码强度设置为最低 然后 flush privileges;最后再执行一下你的set密码的语句，然后再flush privileges; 最后exit，再进入mysql试试。 （￣︶￣）↗ Mysql的远程连接 当一切准备就绪后，如果成功进入mysql了,看到mysql&gt;的话，那么就试试远程连接 首先先 ：use mysql; 第二步 ：update user set host='%' where user ='root'; 最后 ： flush privileges; 最后，最后，最后 ！！！！！ 如果连接不成功的话，那么请关闭防火墙，systemctl stop firewalld.service或者 firewall-cmd --zone=public --add-port=3306/tcp --permanent如果您使用阿里云的云服务器，因为作者是使用本机的linux服务器的，所以多一个步骤就是将在阿里云开启3306端口。 二，Linux的离线的MySQL5.7安装😘 ( •̀ ω •́ )✧首先先自己下载 https://dev.mysql.com/downloads/mysql/ Mysql的离线包，选择第二个64位的 Linux-Generic 下载了包以后用SFTP软件传到你想安装的目录下 第一步：先看看Linux服务器中有没有 Mariadb，有的话先卸载，卸载没遇到过，可以去百度，以为作者的服务器的啥样不是 第二步：删除&#x2F;etc&#x2F;my.cnf文件，因为会影响配置，所以先卸载了再说，后面可以再加上去 第三步：创建mysql用户组: groupadd mysql 第四步：加入到mysql用户组里面 useradd -g mysql mysql 注意！！作者之前操作问题，好像有mysql用户组，如果有的话，先执行一下，提升有的话，可以跳过第三部和第四步 进入你创建的目录下，比如 mkdir /data，将你的压缩包放在data下面，然后执行解压操作：tar -zxvf xxxxx.tar.gz 解压以后将解压的文件进行重命名操作 mv xxxx mysql 然后新建一个vi /etc/my.cnf，并且在里面写 [mysql]default-character-set&#x3D;utf8socket&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql.sock[mysqld]skip-name-resolveport&#x3D;3306socket&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql.sockbasedir&#x3D;&#x2F;data&#x2F;mysql #主要这里是mysql安装路径datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;data #这里主要是mysql存储路径，以你创建的为例max_connections&#x3D;200character-set-server&#x3D;utf8default-storage-engine&#x3D;INNODBlower_case_table_names&#x3D;1max_allowed_packet&#x3D;16M :x保存退出 第五步：设置mysql用户： mkdir /var/lib/mysql mkdir /var/lib/mysql/mysql chown -R mysql:mysql /var/lib/mysql chown -R mysql:mysql /var/lib/mysql/mysql 第六步： 进入安装mysql软件目录 cd /data/mysql chown -R mysql:mysql ./ cd bin ./mysqld --user=mysql --basedir=/data/mysql --datadir=/data/mysql/data/ --initialize cd /data/mysql chown -R mysql:mysql data #修改当前data目录拥有者为mysql用户 第七步： 修改权限： chmod +x /etc/my.cnf 复制启动脚本到资源目录cd /home/mysql/ cp ./support-files/mysql.server /etc/init.d/mysqld 加入权限: chmod +x /etc/init.d/mysqld 将mysqld服务加入到系统服务chkconfig --add mysqld 检查mysqld服务是否已经生效chkconfig --list mysqld，如果出现mysqld 0:off 1:off 2:on 3:on 4:on 5:on 6 说明成功 将mysql的bin目录加入PATH环境变量，编辑&#x2F;etc&#x2F;profile文件vi /etc/profile export PATH=$PATH:/data/mysql/bin source /etc/profile #最后执行生效 🐎到最后mysql离线版本算是安装完成了，后面远程连接，修改密码操作参考第一个yum在线安教程的连接方法。 三，Linux完全卸载MySQL5.7😘 如果要完完全全删除mysql，不能用yum remove 操作，因为删不干净，还会有残留包，因为作者是离线安装所以没有图片展示 首先：先查看mysql的组件包: rpm -qa | grep -i mysql 第二步：关闭mysql服务： service mysqld stop 或者 systemctl stop mysqld 第三步：查看mysql对应文件夹: find / -name mysql 第四步：删除组件：rpm -ev –nodeps xxxx组件包名 第五步：删除mysql所以有配置文件夹： rm -rf /var/lib/mysql,不止这么多，第三步列出来的有什么就删除什么 最后：执行第一步和第三步如何啥也没有就说明彻底卸载了","categories":[],"tags":[]},{"title":"caddy 出现的问题","slug":"caddy","date":"2024-01-11T14:01:53.000Z","updated":"2024-01-12T01:49:03.592Z","comments":true,"path":"2024/01/11/caddy/","permalink":"http://example.com/2024/01/11/caddy/","excerpt":"","text":"Caddy解决404问题 这个问题可能是由于Caddy默认不支持单页应用（SPA）的路由机制导致的。当您刷新浏览器时，请求会直接发送到Caddy服务器，由于Caddy不知道如何处理这个特定的路由，因此返回404错误。要解决这个问题，您需要配置Caddyfile来处理单页应用的路由。以下是一个Caddyfile的示例配置，它为您的单页应用提供了一个通用的回退机制。它将确保所有未知的请求都会回退到您的index.html文件，这将允许前端路由器正确处理请求： 12345your_domain.comroot * /path/to/your/projectfile_servertry_files &#123;path&#125; /index.html 在这个示例中，请替换your_domain.com为您的实际域名，将&#x2F;path&#x2F;to&#x2F;your&#x2F;project替换为您的项目文件夹的路径。这个配置文件定义了一个try_files指令，它会尝试按照顺序提供列表中的文件。如果当前请求的路径在文件系统中不存在，它会回退到&#x2F;index.html文件。这将确保当您刷新浏览器时，前端路由器可以接管并正确处理请求。保存更改后，重新启动Caddy服务以应用新的配置。现在，您的单页应用应该可以在刷新浏览器后正常工作。 在Caddyfile中，{path}是一个占位符，表示当前请求的路径。当使用try_files指令时，它会尝试按照列表中的顺序提供文件。在这个例子中: 1try_files &#123;path&#125; /index.html {path}表示当前请求的实际路径。try_files首先尝试使用这个路径来查找文件。如果找到了匹配的文件，Caddy会将该文件提供给客户端。如果没有找到匹配的文件，try_files将按照列表中的顺序尝试下一个选项，这里是&#x2F;index.html。所以{path}确保Caddy首先尝试提供当前请求的实际路径。如果找不到对应的文件，它将回退到&#x2F;index.html。这在处理单页应用（SPA）中的前端路由时非常有用，因为这样可以确保当请求的路径在文件系统中不存在时，前端路由器仍然可以接管并正确处理请求。 如果这个以上方法不成功的话，可以使用以下配置： 你的问题可能与Caddy配置文件的处理顺序有关。请尝试以下Caddyfile配置： 12345678your_domain.comroot * /path/to/your/projectfile_serverrewrite * &#123;path&#125; /index.htmlroute &#123; try_files &#123;path&#125; /index.html&#125; 这个配置文件首先尝试使用rewrite指令重写所有请求。然后，它使用route块来定义一个处理请求的流程。try_files指令被包含在route块内，它首先尝试提供当前请求的实际路径（{path}），如果找不到匹配的文件，则会回退到&#x2F;index.html。请将your_domain.com替换为您的实际域名，将&#x2F;path&#x2F;to&#x2F;your&#x2F;project替换为您的项目文件夹的路径。更新Caddyfile后，重新启动Caddy服务以应用新的配置。刷新浏览器后，您的单页应用应该可以正常工作了。如果问题仍然存在，请检查Caddy的日志以获取有关错误的更多详细信息，并确保您的项目文件夹和index.html文件的路径正确。 Caddy日志 Caddy的日志位置取决于您的操作系统和Caddy的安装方式。以下是几种可能的日志位置：如果您是通过命令行手动运行Caddy（例如：caddy run），则日志将直接输出到命令行终端。如果您是使用Systemd管理的Caddy服务，可以使用以下命令查看日志：sudo journalctl -u caddy --since today这将显示今天的Caddy服务日志。您可以通过调整–since参数来查看更早的日志。如果Caddy已配置为将日志写入文件，那么您需要查找Caddyfile中指定的日志文件路径。例如，Caddyfile中可能包含如下配置： 123log &#123; output file /var/log/caddy/caddy.log&#125; 在这种情况下，您可以在&#x2F;var&#x2F;log&#x2F;caddy&#x2F;caddy.log找到日志。如果您不确定如何配置Caddy以将日志输出到文件，请参考以下Caddyfile示例： 12345678910your_domain.comroot * /path/to/your/projectfile_servertry_files &#123;path&#125; /index.htmllog &#123; output file /path/to/your/log/caddy.log format console&#125; 将&#x2F;path&#x2F;to&#x2F;your&#x2F;log替换为您希望存储日志文件的目录。这将使Caddy将其日志输出到指定的文件中。不同的操作系统和安装方式可能会影响Caddy日志的位置。如果您无法在上述位置找到日志，请查看Caddy文档或您操作系统的文档以获取更多详细信息。","categories":[],"tags":[]}],"categories":[],"tags":[]}